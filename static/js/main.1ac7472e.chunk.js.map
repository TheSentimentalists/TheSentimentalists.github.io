{"version":3,"sources":["components/URLInput/URLInputHeader.js","components/URLInput/URLInput.js","components/Loading/Loading.js","components/Results/TrustScore.js","components/Results/ArticleSummary.js","components/Results/Credibility.js","components/Results/Objectivity.js","components/Results/Polarity.js","components/Results/displayResults.js","App.js","serviceWorker.js","index.js","assets/images/Sentimentalists_Logo_270X273.png","assets/images/heart.gif"],"names":["useStyles","makeStyles","mainLogo","display","width","height","padding","maxHeight","maxWidth","margin","mainHeading","fontSize","textAlign","fontFamily","marginBottom","appDescription","marginTop","paddingLeft","URLInputHeader","classes","Grid","container","justify","item","xs","sm","md","lg","src","Logo","alt","className","Typography","variant","inputURLArea","paddingTop","paddingBottom","inputBox","inputButton","background","borderRadius","infoText","info","color","URLInput","props","useState","text","setText","direction","align","fullWidth","required","label","value","onChange","event","target","error","id","Tooltip","arrow","placement","title","style","Button","size","onClick","setLoading","requestOptions","method","headers","body","JSON","stringify","url","fetch","then","response","a","json","data","ok","message","status","Promise","reject","setRequest","catch","console","disableElevation","Loading","heartgif","items","cursor","emptyPause","typingInterval","deletingInterval","trustScoreHeader","trustScoreTooltip","trustScoreHelp","TrustScore","fgcolor","trustmoji","percentage","Bscore","percent","unfilledBackground","filledBackground","ArticleSummaryText","ArticleTitle","fontWeight","ArticleURL","SummaryText","keywordChip","backgroundColor","ArticleSummary","articleTitle","articleSummary","keywords","displayArticle","hasOwnProperty","header","summary","truncatedSummary","length","slice","truncateSummaryText","noWrap","displayURL","map","word","index","Chip","key","charAt","toUpperCase","credibilityGaugeHeading","resultsHeading","categoryTitle","categoryChip","sourceChip","chipLink","textDecoration","categoryText","paddingRight","credibilityHelp","credibilityTooltip","Credibility","score","category","source","outcome","categoryGauge","hideText","textColor","nrOfLevels","colors","needleColor","alignItems","href","objectivityGaugeHeading","objectivityText","objectivityTooltip","objectivityHelp","Objectivity","displayObjectivity","objectivityGauge","polarityGaugeHeading","polarityText","polarityTooltip","polarityHelp","Polarity","log","displayPolarity","polscore","polemoji","polarityGauge","formatTextValue","arcsLength","logo","credibilityBox","credibilityText","sentimentBox","sentimentHeading","sentimentText","DisplayResults","resultsObj","displayResults","analysedURL","article","credibilityObj","results","polarityScore","objectivityScore","trustScore","borderBottom","borderRight","containerStyle","innerContainer","boxShadow","errorDisplay","errorText","tryAgainButton","border","loading","zIndex","footer","App","request","Container","fixed","FallbackComponent","resetErrorBoundary","role","onReset","resetKeys","Backdrop","open","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1ac7472e.chunk.js","sourcesContent":["import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Logo from \"../../assets/images/Sentimentalists_Logo_270X273.png\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../../App.css\";\n\nconst useStyles = makeStyles({\n  mainLogo: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"auto\",\n    padding: \"10px\",\n    maxHeight: \"270px\",\n    maxWidth: \"273px\",\n    margin: \"auto\",\n\n  },\n  mainHeading: {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    fontFamily: \"Graduate, sans-serif\",\n    marginBottom: \"50px\"\n  },\n  appDescription: {\n    textAlign: \"left\",\n    fontFamily: \"Roboto, sans-serif\",\n    marginTop: \"18px\",\n    marginBottom: \"25px\",\n    paddingLeft: \"10px\",\n  },\n});\n\nfunction URLInputHeader() {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={7} sm={5} md={4} lg={4}>\n        <img\n          src={Logo}\n          alt=\"The Sentimentalists Logo\"\n          className={classes.mainLogo}\n        />\n      </Grid>\n      <Grid item xs={10}>\n        <Typography variant=\"h1\" className={classes.mainHeading}>\n          Analysing Media\n          <br />\n          Sentiment Since 2020\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default URLInputHeader;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Textfield from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport \"./URLinput.css\";\nimport URLInputHeader from \"./URLInputHeader\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n/* resolve CSS */\n/*error toggle needs implementing*/\n/*Button onClick needs to hide input and open results*/\n\nconst useStyles = makeStyles(() => ({\n  inputURLArea: {\n    paddingTop: \"25px\",\n    paddingBottom: \"85px\",\n  },\n\n  inputBox: {\n    textAlign: \"center\",\n    marginBottom: \"30px\",\n    fontFamily: \"Graduate, sans-serif\",\n  },\n\n  inputButton: {\n    background: \"#6bb26d\",\n    borderRadius: 0,\n    fontFamily: \"Graduate,\",\n    fontSize: \"20px\",\n  },\n\n  infoText: {\n    fontSize: \"16px\"\n  },\n\n  info: {\n    color: \"#6bb26d\",\n    fontSize: \"25px\",\n  },\n\n  \n}));\n\nfunction URLInput(props) {\n  const [text, setText] = useState(\"\");\n  const classes = useStyles();\n\n  const handleTextChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    props.setLoading(true);\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ url: text }),\n    };\n\n    fetch(\n      \"https://1rrk3o1dq0.execute-api.eu-west-2.amazonaws.com/prod/analysis\",\n      requestOptions\n    )\n      .then(async (response) => {\n        const data = await response.json();\n\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n        props.setRequest(data);\n        props.setLoading(false);\n      })\n      .catch((error) => {\n        props.setLoading(false);\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n  return (\n    <div>\n      <URLInputHeader />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        align=\"center\"\n        className={classes.inputURLArea}\n      >\n        <form>\n          <Grid item xs={10} sm={8} md={6} lg={3}>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              align=\"center\"\n            >\n              <Grid item xs={11}>\n                <Textfield\n                  className={classes.inputBox}\n                  fullWidth\n                  required\n                  label=\"Input URL\"\n                  variant=\"outlined\"\n                  value={text}\n                  onChange={handleTextChange}\n                  color=\"secondary\"\n                  error\n                  id=\"standard-error\"\n                ></Textfield>\n              </Grid>\n              <Grid item>\n                <Tooltip\n                  arrow\n                  placement=\"bottom\"\n                  title={<p style={{ fontSize: \"16px \"}}>Have you ever wondered if you can trust what you read in the news?<br/>\n                        Are you ever baffled by bias and puzzled by politics?<br/>\n                        The Sentimentalists App is designed to help you make informed judgments/decisions/conclusions about the news content you consume online.<br/>\n                        To find out if what you’ve been reading is a worthwhile source, just enter a URL and click Analyse.</p>}\n                >\n                  <HelpIcon className={classes.info} />\n                </Tooltip>\n              </Grid>\n            </Grid>\n          </Grid>\n          <Button\n            style={{ fontFamily: \"Graduate\" }}\n            className={classes.inputButton}\n            size=\"large\"\n            variant=\"contained\"\n            onClick={handleSubmit}\n            disableElevation\n          >\n            Analyse\n          </Button>\n        </form>\n      </Grid>\n    </div>\n  );\n}\n\nexport default URLInput;\n","import React from \"react\";\nimport ReactRotatingText from \"react-rotating-text\"\nimport heartgif from '../../assets/images/heart.gif';\nimport \"../../App.css\";\n\nfunction Loading() {\n\n  const loadingMessages = [\n    'Analysing underlying sentiment...',\n    'Converging opinionated opinions...',\n    'Evaluating controversial topics...',\n    'Calculating trust vectors...',\n    'Extrapolating emotion exertion...',\n    'Peeling political facade...'\n  ]\n  return (\n    <div>\n      <img src={heartgif} alt=\"Beating Heart\" />\n     <h2> <ReactRotatingText \n     items={loadingMessages} \n     cursor={false}\n     emptyPause={0}\n     typingInterval={0}\n     deletingInterval={0}\n     /></h2>\n    </div>\n  );\n}\n\nexport default Loading;\n","import React from \"react\";\nimport \"react-step-progress-bar/styles.css\";\nimport { ProgressBar } from \"react-step-progress-bar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography, Tooltip } from \"@material-ui/core/\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst useStyles = makeStyles({\n  trustScoreHeader: {\n    textAlign: \"left\",\n    paddingBottom: \"20px\",\n  },\n\n  trustScoreTooltip: {\n    fontSize: \"30px\",\n  },\n\n  trustScoreHelp: {\n    textAlign: \"right\",\n    color: \"#6bb26d\",\n  },\n});\n\nfunction TrustScore(props) {\n  const classes = useStyles();\n\n  let percentage = props.Bscore;\n  let fgcolor;\n  let trustmoji;\n\n  if (percentage < 30) {\n    fgcolor = \"linear-gradient(to right, #7d1225, #e60202 )\";\n    trustmoji = '🙁';\n\n  } else if (percentage >= 30 && percentage < 70) {\n    fgcolor = \"linear-gradient(to right, #ffcf53, #e79b37)\";\n    trustmoji = '😐';\n\n  } else {\n    fgcolor = \"linear-gradient(to right, #5ba45b, #396f5c)\";\n    trustmoji = '😃';\n  }\n\n  return (\n    <div>\n      <Grid container justify=\"center\">\n        <Grid item xs={10} sm={10} md={10} lg={10}>\n          <Grid container justify =\"left\" >\n          <Typography variant=\"h5\" className={classes.trustScoreHeader}>\n            Trust Indicator\n          </Typography>\n          <Grid>\n            <Tooltip\n                className={classes.trustScoreTooltip}\n                title={\n                  <p style={{ fontSize: \"16px\" }}>\n                    Trust indicator breifly provides Trustworthiness of an article. It is calculated with equal weightage on Credibility, Objectivity and Polarity of the Article. A Green progress bar means article has Trustworthiness greater than 70%, a yellow bar means the article has Trustworthiness between 30% to 70%  and a red bar means that the article has Trustworthiness less than 30%.\n                  </p>\n                }\n              >\n              <HelpIcon className={classes.trustScoreHelp} />\n            </Tooltip>\n          </Grid>\n          </Grid>\n\n        </Grid>\n        <Grid item xs={10} sm={10} md={10} lg={10}>\n        <Grid item  justify=\"center\">\n            {trustmoji}\n        </Grid>    \n          <ProgressBar\n            percent={percentage}\n            unfilledBackground=\"lightgrey\"\n            filledBackground={fgcolor}\n            height={15}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\nexport default TrustScore;","import React from \"react\";\nimport { Grid, Typography, makeStyles, Chip } from \"@material-ui/core/\";\nimport \"../../App.css\";\n\nconst useStyles = makeStyles({\n  ArticleSummaryText: {\n    fontFamily: \"Roboto, sans-serif\",\n    padding: \"10px\",\n    textAlign: \"left\",\n    marginBottom: \"25px\",\n  },\n  ArticleTitle: {\n    fontSize: \"20px\",\n    fontWeight: \"700\",\n    marginBottom: \"18px\",\n  },\n  ArticleURL: {\n    fontSize: \"14px\",\n    marginBottom: \"10px\",\n  },\n  SummaryText: {\n    marginBottom: \"12px\",\n    fontSize: \"16px\",\n  },\n\n  keywordChip: {\n    backgroundColor: \"#f8ce94\",\n    margin: \"3px\",\n    fontWeight: \"700\",\n  },\n});\n\nfunction ArticleSummary(props) {\n  const classes = useStyles();\n\n  let articleTitle;\n  let articleSummary;\n  let keywords;\n\n  const generateSummaryText = () => {\n    if (props.displayArticle.hasOwnProperty(\"error\")) {\n      articleTitle = \"The Article Title could not be generated.\";\n      articleSummary = \"The article summary could not be generated.\";\n      keywords = \"No keywords\";\n    } else {\n      articleTitle = props.displayArticle.header;\n      articleSummary = props.displayArticle.summary;\n      keywords = props.displayArticle.keywords;\n    }\n  };\n  generateSummaryText();\n\n  const truncateSummaryText = () => {\n    let truncatedSummary;\n    if (articleSummary.length > 350) {\n      truncatedSummary = articleSummary.slice(0, 350) + \"...\";\n    }\n    articleSummary = truncatedSummary;\n  };\n\n  truncateSummaryText();\n\n  return (\n    <div>\n      <Grid\n        container\n        justify=\"flex-start\"\n        direction=\"column\"\n        className={classes.ArticleSummaryText}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" className={classes.ArticleTitle}>\n            {articleTitle}\n          </Typography>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Typography variant=\"body1\" className={classes.ArticleURL} noWrap>\n            {props.displayURL}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} lg={9}>\n          <Typography variant=\"body2\" className={classes.SummaryText}>\n            {articleSummary}\n          </Typography>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Typography variant=\"body1\">Keywords:</Typography>\n          {keywords.map((word, index) => (\n            <Chip\n              key={index}\n              label={word.charAt(0).toUpperCase() + word.slice(1)}\n              className={classes.keywordChip}\n            />\n          ))}\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ArticleSummary;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Grid, Chip, Tooltip } from \"@material-ui/core/\";\nimport Typography from \"@material-ui/core/Typography\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport \"../../App.css\";\n\nconst useStyles = makeStyles({\n  credibilityGaugeHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n    textAlign: \"left\",\n    fontSize: \"18px\",\n    paddingLeft: \"35px\",\n    paddingBottom: \"10px\",\n  },\n\n  resultsHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n  },\n\n\n  categoryTitle: {\n    fontFamily: \"Roboto, sans-serif\",\n    textAlign: \"left\",\n    paddingLeft: \"45px\",\n    fontWeight: \"600\",\n    marginBottom: \"5px  \",\n  },\n\n  categoryChip: {\n    background: \"#f8ce94\",\n    fontFamily: \"Roboto, sans-serif\",\n    fontWeight: \"600\"\n  },\n\n  sourceChip: {\n    background: \"#f8ce94\",\n    fontFamily: \"Roboto, sans-serif\",\n    cursor: \"pointer\",\n  },\n\n  chipLink: {\n    textDecoration: \"none\",\n  },\n\n  categoryText: {\n    paddingLeft: \"45px\",\n    textAlign: \"left\",\n    paddingRight: \"10px\",\n    marginBottom: \"15px\",\n  },\n\n  credibilityHelp: {\n    color: \"#6bb26d\",\n  },\n\n  credibilityTooltip: {\n    fontSize: \"30px\",\n  },\n});\n\nfunction Credibility(props) {\n  const classes = useStyles();\n  let score;\n  let category;\n  let source;\n\n  const handleError = () =>{\n    if (props.hasOwnProperty('error')){\n      score = 0;\n      category = 'No Category Available';\n      source = \"No Source Available\";\n      } else {\n        score = props.outcome.score / 100;\n        category = props.outcome.category;\n        source = props.outcome.source;\n      }\n  }\nhandleError()\n\n  let categoryText = () => {\n    switch (props.category) {\n      case \"Left Center\":\n        categoryText = `These media sources have a slight to moderate liberal bias. \n        They often publish factual information that utilizes loaded words \n        (wording that attempts to influence an audience by using appeal to emotion or stereotypes)\n         to favor liberal causes. These sources are generally trustworthy for information, but\n        may require further investigation.`;\n        break;\n      case \"Left\":\n        categoryText = `These media sources are moderately to strongly biased toward liberal causes through\n          story selection and/or political affiliation. They may utilize strong loaded words \n          (wording that attempts to influence an audience by using appeal to emotion or stereotypes),\n          publish misleadingreports and omit reporting of information that may damage liberal causes.\n          Some sources in this category may be untrustworthy.`;\n        break;\n      case \"Right Center\":\n        categoryText = `These media sources are slightly to moderately conservative in bias. \n          They often publish factual information that utilizes loaded words (wording that attempts\n             to influence an audience by using appeal to emotion or stereotypes) to favor conservative\n              causes. These sources are generally trustworthy for information, but may require further investigation.`;\n        break;\n      case \"Right\":\n        categoryText = `These media sources are moderately to strongly biased toward conservative causes through\n           story selection and/or political affiliation. They may utilize strong loaded words (wording that attempts \n            to influence an audience by using appeal to emotion or stereotypes), publish misleading reports and omit \n            reporting of information that may damage conservative causes. Some sources in this category may be untrustworthy`;\n        break;\n      case \"Conspiracy\":\n        categoryText = `Sources in the Conspiracy-Pseudoscience category may publish unverifiable information that is\n              not always supported by evidence. These sources maybe untrustworthy for credible/verifiable information, \n              therefore fact checking and further investigation is recommended on a per article basis when obtaining information\n              from these sources`;\n        break;\n      case \"Fake News\":\n        categoryText = `A questionable source exhibits one or more of the following: extreme bias, consistent promotion of \n                propaganda/conspiracies, poor or no sourcing to credible information, a complete lack of transparency and/or \n                is fake news. Fake News is the deliberate attempt to publish hoaxes and/or disinformation for the purpose of\n                 profit or influence. Sources listed in the Questionable Category maybe very untrustworthy and should be fact \n                 checked on a per article basis. Please note sources on this listare not considered fake news unless specifically\n                 written in the reasoning section for that source.`;\n        break;\n      default:\n        categoryText = `Not enough about this source exists to calculate a score`;\n    }\n  };\n  categoryText();\n\n  return (\n    <div>\n      <Grid container justify=\"center\" direction=\"column\">\n        <Grid item xs={12} >\n          <GaugeChart\n            className={classes.categoryGauge}\n            id=\"main-gauge\"\n            percent={score}\n            hideText={false}\n            textColor=\"#000000\"\n            nrOfLevels={3}\n            colors={[\"#ee445e\", \"#f8ce94\", \"#6bb26d\"]}\n            needleColor=\"#d9d9d9\"\n            \n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"h5\" className={classes.credibilityGaugeHeading}>\n            Credibility\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid\n            container\n            justify=\"flex-start\"\n            alignItems=\"flex-start\"\n            style={{marginBottom: \"7px\"}}\n          >\n            <Grid item >\n              <Typography variant=\"subtitle2\" className={classes.categoryTitle}>\n                Category:{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item >\n              <Chip label={category} className={classes.categoryChip} />\n            </Grid>\n            <Grid item >\n              <Tooltip\n                placement=\"bottom\"\n                arrow\n                title={<p style={{ fontSize: \"16px\" }}>{categoryText}</p>}\n                className={classes.credibilityTooltip}\n              >\n                <HelpIcon className={classes.credibilityHelp} />\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"subtitle2\" className={classes.categoryTitle}>\n            Source:{\" \"}\n            <a\n              href=\"https://mediabiasfactcheck.com/\"\n              className={classes.chipLink}\n            >\n              <Chip label={source} className={classes.sourceChip} />\n            </a>\n          </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Credibility;\n","import React from \"react\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Grid, Typography, Tooltip } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst useStyles = makeStyles({\n  objectivityGaugeHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n    textAlign: \"left\",\n    fontSize: \"18px\",\n    paddingLeft: \"35px\",\n    paddingBottom: \"10px\",\n  },\n\n  objectivityText: {\n    textAlign: \"left\",\n    paddingLeft: \"35px\",\n    fontSize: \"16px\",\n  },\n\n  objectivityTooltip: {\n    fontSize: \"30px\",\n  },\n\n  objectivityHelp: {\n    color: \"#6bb26d\",\n  },\n});\n\nfunction Objectivity(props) {\n  const classes = useStyles();\n  const score = props.displayObjectivity;\n\n  return (\n    <div>\n      <Grid container justify=\"center\" direction=\"column\">\n        <Grid item xs={12}>\n          <GaugeChart\n            className={classes.objectivityGauge}\n            textColor=\"#000000\"\n            id=\"objectivity-gauge\"\n            percent={score}\n            hideText={false}\n            nrOfLevels={3}\n            colors={[\"#ee445e\", \"#f8ce94\", \"#6bb26d\"]}\n            needleColor=\"#d9d9d9\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n            <Grid item>\n              <Typography\n                variant=\"subtitle2\"\n                className={classes.objectivityGaugeHeading}\n              >\n                Objectivity\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Tooltip\n                placement=\"bottom\"\n                arrow\n                className={classes.objectivityTooltip}\n                title={\n                  <p style={{ fontSize: \"16px\" }}>\n                    Quantifies the amount of factual information X personal\n                    opinion contained in the text. The higher objectivity means\n                    that the text contains factual information rather than\n                    personal opinion.\n                  </p>\n                }\n              >\n                <HelpIcon className={classes.objectivityHelp} />\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Objectivity;\n","import React from \"react\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { Grid, Typography, Tooltip } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nconst useStyles = makeStyles({\n  polarityGaugeHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n    textAlign: \"left\",\n    fontSize: \"18px\",\n    paddingLeft: \"35px\",\n    paddingBottom: \"10px\",\n  },\n\n\n  polarityText: {\n    textAlign: \"left\",\n    paddingLeft: \"35px\",\n    fontSize: \"16px\",\n  },\n\n  polarityTooltip: {\n    fontSize: \"30px\",\n  },\n\n  polarityHelp: {\n    color: \"#6bb26d\",\n  },\n});\n\nfunction Polarity(props) {\n  const classes = useStyles();\n  console.log(props.displayPolarity)\n  const polscore = (props.displayPolarity+1)/2; //normalize -1 to +1 scale to 0-1, then convert to a percentage\n  let polemoji = ''\n\n  if (polscore < 0.25) {\n    polemoji = '😡' \n  } else if (polscore >= 0.25 && polscore < 0.45) {\n    polemoji = '🙁' \n  } else if (polscore >= 0.45 && polscore < 0.55) {\n    polemoji = '😐' \n} else if (polscore >= 0.55 && polscore < 0.75) {\n    polemoji = '😊' \n} else if (polscore >= 0.75 && polscore < 1) {\n    polemoji = '😃' \n}\n\n  return (\n    <div>\n      <Grid container justify=\"center\" direction=\"column\">\n        <Grid item xs={12}>\n          <GaugeChart\n            className={classes.polarityGauge}\n            textColor=\"#000000\"\n            id=\"polarity-gauge\"\n            percent={polscore}\n            hideText={false}\n            nrOfLevels={3}\n            colors={[\"#e62a4c\", \"#d1d1d1\", \"#6bb26d\"]}\n            formatTextValue={() => polemoji}\n            arcsLength={[0.45, 0.1, 0.45]}\n            needleColor=\"#d9d9d9\"\n            \n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container justify=\"flex-start\" alignItems=\"flex-start\">\n            <Grid item>\n              <Typography\n                variant=\"subtitle2\"\n                className={classes.polarityGaugeHeading}\n              >\n                Polarity\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Tooltip\n                placement=\"bottom\"\n                arrow\n                className={classes.polarityTooltip}\n                title={\n                  <p style={{ fontSize: \"16px\" }}>\n                    Measures the emotion behind the article, from negative to positive.\n                  </p>\n                }\n              >\n                <HelpIcon className={classes.polarityHelp} />\n              </Tooltip>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default Polarity;\n","import React from \"react\";\nimport \"../../App.css\";\nimport { Grid, Typography } from \"@material-ui/core/\";\nimport TrustScore from \"./TrustScore\";\nimport ArticleSummary from \"./ArticleSummary\";\nimport Credibility from \"./Credibility\";\nimport Objectivity from \"./Objectivity\";\nimport Polarity from \"./Polarity\";\nimport Logo from \"../../assets/images/Sentimentalists_Logo_270X273.png\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  header: {\n    background: \"#d9d9d9\",\n  },\n  logo: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"auto\",\n    maxHeight: \"110px\",\n    maxWidth: \"113px\",\n    margin: \"auto\",\n    padding: \"10px\",\n  },\n  credibilityBox: {\n    paddingLeft: \"12px\",\n    paddingTop: \"18px\"\n  },\n\n  \n  credibilityText: {\n    textAlign: \"left\",\n    fontFamily: \"Roboto, sans-serif\",\n    paddingLeft: \"30px\",\n    marginTop: \"10px\",\n    marginBottom: \"25px\"\n  },\n\n  sentimentBox: { \n    paddingLeft: \"12px\",\n    paddingTop: \"18px\",\n\n  },\n  sentimentHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n    textAlign: \"left\",\n    paddingLeft: \"30px\"\n  },\n\n  sentimentText: {\n    textAlign: \"left\",\n    fontFamily: \"Roboto, sans-serif\",\n    paddingLeft: \"30px\",\n    marginBottom: \"25px\"\n  },\n});\n\nfunction DisplayResults(props) {\n  const classes = useStyles();\n  const resultsObj = props.displayResults;\n\n  const analysedURL = resultsObj.url;\n  console.log(resultsObj);\n\n  const article = resultsObj.article;\n  const credibilityObj = resultsObj.results[0].outcome;\n  const polarityScore = resultsObj.results[1].outcome.score;\n  const objectivityScore = resultsObj.results[2].outcome.score;\n  const trustScore = 100 - resultsObj.results[3].outcome.score;\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12}>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"flex-start\"\n            alignItems=\"center\"\n            className={classes.header}\n          >\n            <Grid item xs={6} sm={6} md={3} lg={2}>\n              <img\n                src={Logo}\n                alt=\"The Sentimentalists Logo\"\n                className={classes.logo}\n              />\n            </Grid>\n            <Grid item xs={6} sm={6} md={3} lg={3}>\n              <Typography\n                variant=\"h1\"\n                style={{ fontSize: \"18px\", fontFamily: \"Graduate, sans-serif\" }}\n              >\n                Analysing Media Sentiment Since 2020\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n\n        <Grid item xs={12} style={{ borderBottom: \"1px solid #efefef\" }}>\n          <ArticleSummary displayURL={analysedURL} displayArticle={article} />\n        </Grid>\n        <Grid\n          item\n          xs={12}\n          style={{\n            borderBottom: \"1px solid #efefef\",\n            paddingTop: \"12px\",\n            paddingBottom: \"20px\",\n          }}\n        >\n   <TrustScore Bscore={trustScore} />\n\n        </Grid>\n        <Grid item xs={12} md={4} style={{ borderRight: \"1px solid #efefef\" }}>\n          <Grid\n            container\n            direction=\"column\"\n  justify=\"flex-start\"\n  alignItems=\"stretch\"\n\n           className={classes.credibilityBox}\n          >\n            <Grid item xs={12}>\n              <Credibility outcome={credibilityObj} />\n            </Grid>\n            \n            \n            <Grid item xs={10}>\n              <Typography variant=\"body2\" className={classes.credibilityText}>\n                <strong>What?</strong> The credibility of a website is very\n                important and we will tell you why.\n                <br />\n                <strong>Why?</strong> Article context is very important, if you\n                give us a chance we will tell you why. More text....MoreMore\n                text.... text....More text....More text....More text....More\n                \n              </Typography>\n            </Grid>\n           \n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          justify=\"flex-start\"\n          direction=\"row\"\n          alignItems=\"flex-start\"\n          md={8}\n          className={classes.sentimentBox}\n        >\n\n<Grid item xs={12} md={6}>\n            <Objectivity displayObjectivity={objectivityScore} />\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Polarity displayPolarity={polarityScore} />\n          </Grid>\n          <Grid item xs={12}>\n            <Typography\n              variant=\"subtitle1\"\n              className={classes.sentimentHeading}\n            >\n              Sentiment Analysis\n            </Typography>\n          </Grid>\n      \n          \n          \n          <Grid item xs={10}>\n            <Typography variant=\"body2\" className={classes.sentimentText}>\n              <strong>What?</strong> Sentiment Analysis the process of analysing\n              online pieces of writing to determine the tone they carry.\n              <br />\n              <strong>Why?</strong> When consuming content it’s important to\n              know the author’s attitude to something. They might have negative\n              views about something you feel positively about, and vice versa.\n              Knowing that this can influence what you are reading provides you\n              with powerful insight when assessing whether or an article is\n              fully factual.\n            </Typography>\n          </Grid>\n          \n         \n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default DisplayResults;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Container, Grid, Backdrop } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport URLInput from \"./components/URLInput/URLInput\";\nimport Logo from \"./assets/images/Sentimentalists_Logo_270X273.png\";\nimport Loading from \"./components/Loading/Loading\";\nimport DisplayResults from \"./components/Results/displayResults\";\nimport { ErrorBoundary } from \"react-error-boundary\";\n\n//styles\nconst useStyles = makeStyles({\n  containerStyle: {\n    paddingTop: \"20px\",\n    paddingBottom: \"25px\"\n  },\n\n  innerContainer: {\n    boxShadow: \"8px 8px #d9d9d9\",\n    background: \"#ffffff\",\n  },\n\n  errorDisplay: {\n    paddingTop: \"15px\",\n    paddingBottom: \"50px\"\n  },\n\n  errorText: {\n    fontSize: \"25px\"\n  },\n\n  tryAgainButton: {\n    background: \"#f8ce94\",\n    fontFamily: \"Graduate, sans-serif\",\n    fontSize: \"20px\",\n    border: \"none\",\n    padding: \"15px\",\n    cursor: \"pointer\"\n  },\n\n  loading: {\n    zIndex: 999,\n    color: '#fff',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)'\n\n  },\n\n  footer: {\n    background: \"#6bb26d\",\n    padding: \"7px\"\n  }\n  });\n\nfunction App() {\n  const classes = useStyles();\n\n  //request\n  const [request, setRequest] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const ErrorComponent = ({ resetErrorBoundary }) => {\n    return (\n      <div role=\"alert\" className={classes.errorDisplay}>\n        <img src={Logo} alt=\"The Sentimentalists Logo\" />\n\n        <p className={classes.errorText}>Please enter a valid URL</p>\n\n        <button className={classes.tryAgainButton} onClick={resetErrorBoundary}>\n          Try again\n        </button>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Container fixed>\n        <div className={classes.containerStyle}>\n         \n             <div className={classes.innerContainer}>\n            {!request ? (\n              <URLInput setRequest={setRequest} setLoading={setLoading} />\n            ) : (\n              <div>\n                <ErrorBoundary\n                  FallbackComponent={ErrorComponent}\n                  onReset={() => {\n                    setRequest(\"\");\n                  }}\n                  resetKeys={[request]}\n                >\n                  <DisplayResults\n                    displayResults={request}\n                  />\n                </ErrorBoundary>\n                <p>{request.error}</p>\n              </div>\n            )}\n\n            <Grid container className={classes.footer}>\n              <Grid item xs={12}>\n                <h5>The Sentimentalists &copy; 2020</h5>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n        <Backdrop className={classes.loading} open={loading}>\n          <Loading />\n        </Backdrop>\n      </Container>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Sentimentalists_Logo_270X273.b29c69c5.png\";","module.exports = __webpack_public_path__ + \"static/media/heart.4485b915.gif\";"],"sourceRoot":""}