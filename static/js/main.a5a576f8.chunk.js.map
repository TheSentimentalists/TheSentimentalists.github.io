{"version":3,"sources":["assets/images/Sentimentalists_Logo_270X273.png","components/URLInput/URLInputHeader.js","components/URLInput/URLInput.js","components/Results/ArticleSummary.js","components/Results/displayResults.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","mainLogo","display","width","height","padding","maxHeight","maxWidth","margin","mainHeading","fontSize","textAlign","fontFamily","appDescription","marginTop","marginBottom","paddingLeft","URLInputHeader","classes","Grid","container","justify","item","xs","sm","md","lg","src","Logo","alt","className","Typography","variant","inputURLArea","paddingTop","paddingBottom","inputBox","inputButton","background","borderRadius","URLInput","props","useState","text","setText","direction","align","fullWidth","required","label","value","onChange","event","target","color","Button","style","size","onClick","requestOptions","method","headers","body","JSON","stringify","url","fetch","then","response","a","json","data","ok","error","message","status","Promise","reject","setRequest","parse","catch","console","disableElevation","ArticleSummaryText","ArticleTitle","fontWeight","ArticleURL","SummaryText","keywordChip","backgroundColor","ArticleSummary","noWrap","Chip","mainGaugeHeading","mainGauge","resultsTable","resultsHeading","resultsText","DisplayResults","resultsObj","displayResults","credibilityScore","score","source","category","analysedURL","displayURL","id","percent","hideText","textColor","nrOfLevels","colors","alignItems","mode","containerStyle","innerContainer","boxShadow","footer","App","request","Container","fixed","results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5a576f8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Sentimentalists_Logo_270X273.b29c69c5.png\";","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Logo from \"../../assets/images/Sentimentalists_Logo_270X273.png\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport \"../../App.css\";\n\nconst useStyles = makeStyles({\n  mainLogo: {\n    display: \"block\",\n    width: \"100%\",\n    height: \"auto\",\n    padding: \"10px\",\n    maxHeight: \"270px\",\n    maxWidth: \"273px\",\n    margin: \"auto\",\n\n  },\n  mainHeading: {\n    fontSize: \"22px\",\n    textAlign: \"center\",\n    fontFamily: \"Graduate, sans-serif\",\n  },\n  appDescription: {\n    textAlign: \"left\",\n    fontFamily: \"Roboto, sans-serif\",\n    marginTop: \"18px\",\n    marginBottom: \"25px\",\n    paddingLeft: \"10px\",\n  },\n});\n\nfunction URLInputHeader() {\n  const classes = useStyles();\n\n  return (\n    <Grid container justify=\"center\">\n      <Grid item xs={7} sm={5} md={4} lg={4}>\n        <img\n          src={Logo}\n          alt=\"The Sentimentalists Logo\"\n          className={classes.mainLogo}\n        />\n      </Grid>\n      <Grid item xs={10}>\n        <Typography variant=\"h1\" className={classes.mainHeading}>\n          Analysing Media\n          <br />\n          Sentiment Since 2020\n        </Typography>\n      </Grid>\n      <Grid item xs={12} sm={8} md={6} lg={5}>\n        <Typography variant=\"body2\" className={classes.appDescription}>\n          Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos\n          blanditiis tenetur unde suscipit, quam beatae rerum inventore\n          consectetur, neque doloribus, cupiditate numquam dignissimos laborum\n          fugiat deleniti? Eum quasi quidem quibusdam.\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default URLInputHeader;\n","import React, { useState } from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Textfield from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core\";\nimport \"./URLinput.css\";\nimport URLInputHeader from \"./URLInputHeader\";\n/* resolve CSS */\n/*error toggle needs implementing*/\n/*Button onClick needs to hide input and open results*/\n\nconst useStyles = makeStyles(() => ({\n  inputURLArea: {\n    paddingTop: \"25px\",\n    paddingBottom: \"55px\",\n  },\n\n  inputBox: {\n    textAlign: \"center\",\n    marginBottom: \"30px\",\n    fontFamily: \"Graduate, sans-serif\",\n  },\n\n  inputButton: {\n    background: \"#6bb26d\",\n    borderRadius: 0,\n    fontFamily: \"Graduate,\",\n    fontSize: \"20px\",\n  },\n}));\n\nfunction URLInput(props) {\n  const [text, setText] = useState(\"\");\n  const classes = useStyles();\n\n  const handleTextChange = (event) => {\n    setText(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ url: text }),\n    };\n\n    fetch(\n      \"https://q4udqluuqd.execute-api.eu-west-2.amazonaws.com/test/analysis\",\n      requestOptions\n    )\n      .then(async (response) => {\n        const data = await response.json();\n\n        // check for error response\n        if (!response.ok) {\n          // get error message from body or default to response status\n          const error = (data && data.message) || response.status;\n          return Promise.reject(error);\n        }\n\n        props.setRequest(JSON.parse(data));\n      })\n      .catch((error) => {\n        console.error(\"There was an error!\", error);\n      });\n  };\n\n  return (\n    <div>\n      <URLInputHeader />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        align=\"center\"\n        className={classes.inputURLArea}\n      >\n        <form>\n          <Grid item xs={10} sm={8} md={6} lg={3}>\n            <Textfield\n              className={classes.inputBox}\n              fullWidth\n              required\n              label=\"Input URL\"\n              variant=\"outlined\"\n              value={text}\n              onChange={handleTextChange}\n              color=\"secondary\"\n            ></Textfield>\n          </Grid>\n          <Button\n            style={{ fontFamily: \"Graduate\" }}\n            className={classes.inputButton}\n            size=\"large\"\n            variant=\"contained\"\n            onClick={handleSubmit}\n            disableElevation\n          >\n            Analyse\n          </Button>\n        </form>\n      </Grid>\n    </div>\n  );\n}\n\nexport default URLInput;\n","import React from \"react\";\nimport { Grid, Typography, makeStyles, Chip } from \"@material-ui/core/\";\nimport \"../../App.css\";\n\n\nconst useStyles = makeStyles({\n  ArticleSummaryText: {\n    fontFamily: \"Roboto, sans-serif\",\n    padding: \"10px\",\n    textAlign: \"left\",\n  },\n  ArticleTitle: {\n    fontSize: \"20px\",\n    fontWeight: \"700\",\n    marginBottom: \"18px\",\n  },\n  ArticleURL: {\n    fontSize: \"14px\",\n    marginBottom: \"10px\",\n  },\n  SummaryText: {\n    marginBottom: \"12px\",\n    fontSize: \"16px\",\n  },\n\n  keywordChip : {\n    backgroundColor: \"#f8ce94\",\n    margin: \"3px\"\n  }\n});\n\nfunction ArticleSummary() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid\n        container\n        justify=\"flex-start\"\n        direction=\"column\"\n        className={classes.ArticleSummaryText}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h4\" className={classes.ArticleTitle}>\n            Greater Manchester to get tier 3 Covid restrictions imposed after\n            talks fail\n          </Typography>\n        </Grid>\n        \n        \n        <Grid item xs={12}>\n          \n            <Typography variant=\"body1\" className={classes.ArticleURL} noWrap>\n              https://www.theguardian.com/world/2020/oct/20/government-fails-to-reach-deal-with-manchester-over-tier-3-covid-restrictions\n            </Typography>\n          \n        </Grid>\n        <Grid item xs={12} lg={9}>\n          <Typography variant=\"body2\" className={classes.SummaryText}>\n            The summary of the article.The summary of the article.The summary of\n            the article.The summary of the article.The summary of the article.\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <Typography variant=\"body1\">\n            Keywords: \n            <Chip label=\"Boris Johnson\" className={classes.keywordChip}/><Chip label=\"Brexit\" className={classes.keywordChip}/><Chip label=\"Economy\" className={classes.keywordChip}/>\n            </Typography>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default ArticleSummary;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport GaugeChart from \"react-gauge-chart\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Textfit from \"react-textfit\";\nimport \"../../App.css\";\nimport ArticleSummary from './ArticleSummary';\n\nconst useStyles = makeStyles({\n  mainGaugeHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n    paddingTop: \"20px\",\n    paddingBottom: \"40px\",\n    textAlign: \"center\",\n  },\n\n  mainGauge: {},\n  resultsTable: {\n    padding: \"7px\",\n  },\n\n  resultsHeading: {\n    fontFamily: \"Graduate, sans-serif\",\n  },\n\n  resultsText: {\n    fontFamily: \"Roboto, sans-serif\",\n    textAlign: \"center\",\n  },\n});\n\nfunction DisplayResults(props) {\n  const classes = useStyles();\n  const resultsObj = JSON.parse(props.displayResults);\n  const credibilityScore = resultsObj[0].score / 100;\n  // accesses score from credibility analysis, assigns it to a variable,\n  //the score is divided by 100 to provide the format required forthe percent prop on the gauge.\n  const source = resultsObj[0].source;\n  const category = resultsObj[0].category;\n  const analysedURL = props.displayURL;\n\n  return (\n    <div>\n      <ArticleSummary />\n      <Grid container justify=\"center\">\n  \n        <Grid item xs={12} sm={10}>\n          <Typography variant=\"h5\" className={classes.mainGaugeHeading}>\n            Credibility Score\n          </Typography>\n        </Grid>\n        <Grid item xs={12} sm={10} md={8} lg={6}>\n          <GaugeChart\n            className={classes.mainGauge}\n            id=\"main-gauge\"\n            percent={credibilityScore}\n            hideText={false}\n            textColor=\"#000000\"\n            nrOfLevels={3}\n            colors={[\"#ee445e\", \"#f8ce94\", \"#6bb26d\"]}\n          />\n        </Grid>\n        <Grid item xs={12} sm={10} md={8} lg={8}>\n          <Grid\n            container\n            justify=\"center\"\n            alignItems=\"center\"\n            className={classes.resultsTable}\n          >\n            <Grid item xs={12} sm={6}>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.resultsHeading}\n              >\n                Your URL:\n              </Typography>\n            </Grid>\n            <Grid item xs={10} sm={6}>\n              <Textfit className={classes.resultsText} mode=\"multi\">\n                {analysedURL}\n              </Textfit>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.resultsHeading}\n              >\n                Source:\n              </Typography>\n            </Grid>\n            <Grid item xs={10} sm={6}>\n              <Typography variant=\"body2\" className={classes.resultsText}>\n                {source}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography\n                variant=\"subtitle1\"\n                className={classes.resultsHeading}\n              >\n                Category:\n              </Typography>\n            </Grid>\n            <Grid item xs={10} sm={6}>\n              <Typography variant=\"body2\" className={classes.resultsText}>\n                {category}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default DisplayResults;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Container, Grid } from \"@material-ui/core/\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport URLInput from \"./components/URLInput/URLInput\";\nimport DisplayResults from \"./components/Results/displayResults\";\n\n//styles\nconst useStyles = makeStyles({\n  containerStyle: {\n    paddingTop: \"20px\",\n    paddingBottom: \"25px\",\n  },\n\n  innerContainer: {\n    boxShadow: \"8px 8px #d9d9d9\",\n    background: \"#ffffff\",\n  },\n\n  footer: {\n    background: \"#6bb26d\",\n    padding: \"7px\",\n  },\n});\n\nfunction App() {\n  const classes = useStyles();\n\n  //request\n  const [request, setRequest] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <Container fixed>\n        <div className={classes.containerStyle}>\n          <div className={classes.innerContainer}>\n            {!request ? (\n              <URLInput setRequest={setRequest} />\n            ) : (\n              <div>\n                <DisplayResults\n                  displayResults={JSON.stringify(request.results)}\n                  displayURL={request.url}\n                />\n\n                <p>{request.error}</p>\n              </div>\n            )}\n\n            <Grid container className={classes.footer}>\n              <Grid item xs={12}>\n                <h5>The Sentimentalists &copy; 2020</h5>\n              </Grid>\n            </Grid>\n          </div>\n        </div>\n      </Container>\n    </div>\n  );\n}\n\n\nexport default App; \n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}